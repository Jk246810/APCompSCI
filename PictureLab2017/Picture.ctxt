#BlueJ class context
comment0.params=
comment0.target=Picture()
comment0.text=\n\ Constructor\ that\ takes\ no\ arguments\ \n
comment1.params=fileName
comment1.target=Picture(java.lang.String)
comment1.text=\n\ Constructor\ that\ takes\ a\ file\ name\ and\ creates\ the\ picture\ \n\ @param\ fileName\ the\ name\ of\ the\ file\ to\ create\ the\ picture\ from\n
comment10.params=
comment10.target=void\ greyScale()
comment11.params=
comment11.target=void\ solveGold()
comment12.params=
comment12.target=void\ solveCopper()
comment13.params=args
comment13.target=void\ main(java.lang.String[])
comment13.text=Main\ method\ for\ testing\ -\ each\ class\ in\ Java\ can\ have\ a\ main\ \n\ method\ \n
comment2.params=height\ width
comment2.target=Picture(int,\ int)
comment2.text=\n\ Constructor\ that\ takes\ the\ width\ and\ height\n\ @param\ height\ the\ height\ of\ the\ desired\ picture\n\ @param\ width\ the\ width\ of\ the\ desired\ picture\n
comment3.params=copyPicture
comment3.target=Picture(Picture)
comment3.text=\n\ Constructor\ that\ takes\ a\ picture\ and\ creates\ a\ \n\ copy\ of\ that\ picture\n\ @param\ copyPicture\ the\ picture\ to\ copy\n
comment4.params=image
comment4.target=Picture(java.awt.image.BufferedImage)
comment4.text=\n\ Constructor\ that\ takes\ a\ buffered\ image\n\ @param\ image\ the\ buffered\ image\ to\ use\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\n\ Method\ to\ return\ a\ string\ with\ information\ about\ this\ picture.\n\ @return\ a\ string\ with\ information\ about\ the\ picture\ such\ as\ fileName,\n\ height\ and\ width.\n
comment6.params=
comment6.target=void\ clearBlue()
comment7.params=
comment7.target=void\ allRed()
comment8.params=
comment8.target=void\ swapGreenBlue()
comment9.params=
comment9.target=void\ negative()
numComments=14
